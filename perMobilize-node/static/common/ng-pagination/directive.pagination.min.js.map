{"version":3,"sources":["directive.pagination.js"],"names":["pagination","$location","restrict","scope","count","take","activate","maxSize","hideArrows","template","link","element","isCurrent","page","value","current","isDisabled","type","pagesCount","toPage","rebuild","options","buildOptions","pages","calc","generate","search","locationChanged","parseInt","Math","ceil","cellsLeft","cellsRight","lo","hi","list","generateFlat","generateFull","unshift","push","i","queryPage","$watchGroup","$on","angular","module","directive"],"mappings":"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","file":"directive.pagination.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('ng-pagination', [])\r\n        .directive('pagination', ['$location', pagination]);\r\n\r\n    function pagination($location) {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                'count': '=',\r\n                'take': '=',\r\n                'activate': '&',\r\n                'maxSize': '=?',\r\n                'hideArrows': '=?'\r\n            },\r\n            template: template,\r\n            link: function(scope, element) {\r\n                var activate = scope.activate();\r\n                var queryPage = $location.search().page;\r\n                var current = queryPage ? parseInt(queryPage) : 1;\r\n                var pagesCount;\r\n\r\n                activate(current, scope.take);\r\n\r\n                scope.$watchGroup(['take', 'count', 'maxSize', 'hideArrows'], rebuild);\r\n                scope.isCurrent = isCurrent;\r\n                scope.isDisabled = isDisabled;\r\n                scope.pages = [];\r\n                scope.toPage = toPage;\r\n\r\n                scope.$on('$locationChangeSuccess', locationChanged);\r\n\r\n                function isCurrent(page) {\r\n                    return page.value === current;\r\n                }\r\n\r\n                function isDisabled(page) {\r\n                    return page.type === 'separator'\r\n                        || (page.type === 'prev' && current === 1)\r\n                        || (page.type === 'next' && current === pagesCount);\r\n                }\r\n\r\n                function toPage(page) {\r\n                    if (page.value === current || page.type === 'separator') return;\r\n\r\n\r\n                    if (page.type === 'page') {\r\n                        current = page.value;\r\n                    }\r\n                    else if (page.type === 'prev') {\r\n                        if (current > 1) current--;\r\n                        else return;\r\n                    }\r\n                    else if (page.type === 'next') {\r\n                        if (current < pagesCount) current++;\r\n                        else return;\r\n                    }\r\n\r\n                    activate(current, scope.take);\r\n                    rebuild();\r\n                }\r\n\r\n                function rebuild() {\r\n                    var options = buildOptions();\r\n                    var pages = calc(options);\r\n\r\n                    if (!pages) {\r\n                        scope.pages = [];\r\n                        return;\r\n                    }\r\n\r\n                    pagesCount = pages.count;\r\n                    scope.pages = generate(pages, options);\r\n                    $location.search('page', current);\r\n                }\r\n\r\n                function locationChanged() {\r\n                    var page = parseInt($location.search().page);\r\n                    if (!page) return;\r\n\r\n                    scope.toPage({ type: 'page', value: page });\r\n                }\r\n\r\n                function buildOptions() {\r\n                    var options = {\r\n                        count: scope.count,\r\n                        take: scope.take,\r\n                        maxSize: 11,\r\n                        current: current,\r\n                        hideArrows: scope.hideArrows\r\n                    };\r\n\r\n                    if (scope.maxSize) {\r\n                        if (scope.maxSize < 7) options.maxSize = 7;\r\n                        else options.maxSize = scope.maxSize;\r\n                    }\r\n\r\n                    return options;\r\n                }\r\n\r\n                function calc(options) {\r\n                    var pages = { };\r\n\r\n                    pages.count = Math.ceil(options.count / options.take);\r\n\r\n                    if (!pages.count || pages.count === 1) return;\r\n\r\n                    if (options.maxSize % 2 === 0) {\r\n                        pages.cellsLeft = options.maxSize / 2 - 1;\r\n                        pages.cellsRight = options.maxSize / 2;\r\n                    }\r\n                    else {\r\n                        pages.cellsLeft = (options.maxSize - 1) / 2;\r\n                        pages.cellsRight = (options.maxSize - 1) / 2;\r\n                    }\r\n\r\n                    if (!options.hideArrows) {\r\n                        pages.cellsLeft--;\r\n                        pages.cellsRight--;\r\n                    }\r\n\r\n                    if (options.current > pages.cellsLeft + 1) pages.cellsLeft--;\r\n                    if (options.current > pages.cellsLeft + 1) pages.cellsLeft--;\r\n                    if (options.current < pages.count - pages.cellsRight) pages.cellsRight--;\r\n                    if (options.current < pages.count - pages.cellsRight) pages.cellsRight--;\r\n\r\n                    pages.lo = options.current - pages.cellsLeft;\r\n                    pages.hi = options.current + pages.cellsRight;\r\n\r\n                    if (pages.lo < 1)\r\n                    {\r\n                        pages.hi += 1 - pages.lo;\r\n                        pages.lo = 1;\r\n                    }\r\n\r\n                    if (pages.hi > pages.count)\r\n                    {\r\n                        pages.lo -= pages.hi - pages.count;\r\n                        pages.hi = pages.count;\r\n                    }\r\n\r\n                    return pages;\r\n                }\r\n\r\n                function generate(pages, options) {\r\n                    var list;\r\n\r\n                    if (pages.count <= options.maxSize) list = generateFlat(pages);\r\n                    else list = generateFull(pages);\r\n\r\n                    if (!options.hideArrows) {\r\n                        list.unshift({ type: 'prev', value: '<' });\r\n                        list.push({ type: 'next', value: '>' });\r\n                    }\r\n\r\n                    return list;\r\n                }\r\n\r\n                function generateFlat(pages) {\r\n                    var list = [];\r\n\r\n                    for (var i = 1; i <= pages.count; i++) {\r\n                        list.push({ type: 'page', value: i });\r\n                    }\r\n\r\n                    return list;\r\n                }\r\n\r\n                function generateFull(pages) {\r\n                    var list = [];\r\n\r\n                    if (pages.lo > 1) list.push({ type: 'page', value: 1 });\r\n                    if (pages.lo > 2) list.push({ type: 'separator', value: '...' });\r\n\r\n                    for (var i = pages.lo; i <= pages.hi ; i++)\r\n                    {\r\n                        if (i <= 0 || i > pages.count) continue;\r\n                        list.push({ type: 'page', value: i })\r\n                    }\r\n\r\n                    if (pages.hi < pages.count - 1) {\r\n                        list.push({ type: 'separator', value: '...' })\r\n                    }\r\n\r\n                    if (pages.hi < pages.count) {\r\n                        list.push({ type: 'page', value: pages.count });\r\n                    }\r\n\r\n                    return list;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function template() {\r\n        return '<div class=\"pagination\">'\r\n            + '<div class=\"page\"'\r\n            + 'ng-repeat=\"page in pages\"'\r\n            + 'ng-class=\"{ \\'active\\': isCurrent(page), \\'disabled\\': isDisabled(page) }\"'\r\n            + 'ng-click=\"toPage(page)\">'\r\n            + '{{ page.value }}'\r\n            + '</div>'\r\n            + '</div>';\r\n    }\r\n})();"],"sourceRoot":"/source/"}